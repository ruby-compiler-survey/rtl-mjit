2019-01-10  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (duphash): Switch off the code.
	(clone_hash): New.
	* iseq.c (validate_get_insn_info): Use rtl size.
	(rb_iseq_clear_event_flags): New arg rtl_p.  Use it.
	(struct insn_data_struct): New members safe_trace_encoded_insn and
	safe_notrace_encoded_insn.
	(get_safe_insn): New.
	(rb_vm_encoded_insn_data_table_init): Set up the safe encoded
	insns.
	(encoded_iseq_trace_instrument): Use the safe encoded insns.
	(rb_iseq_trace_flag_cleared): New arg rtl_p.  Use it.
	(iseq_add_local_tracepoint): Use RTL.
	(rb_iseq_add_local_tracepoint_recursively): Ditto.
	(iseq_remove_local_tracepoint): New arg rtl_p.  Use it.
	(iseq_remove_local_tracepoint_i, rb_iseq_trace_set): Use RTL.
	* mjit.c (mjit_copy_job_handler): Copy cd entries.
	(mjit_recompile_iseq): Pass u, not its node.
	* mjit.h (struct mjit_options): Add member fp_opt.
	* mjit_rtl.c: Check macro USE_MJIT.
	(get_insn_fun_features): Process clone_hash.
	(mjit_rtl_compile): New args cd_entries and is_entries.  Use
	mjit_opts.fp_opt.
	* mjit_worker.c (convert_unit_to_func): Change prototype.
	* rtl_exec.c (clone_hash_f): New.
	* rtl_gen.c (RTL_GEN_DEBUG): Reset.
	(update_stack_by_insn): Remove tracecoverage.  Rename
	getinlinecache to opt_getinlinecache.
	(translate_stack_insn): Rename getinlinecache to
	opt_getinlinecache and setinlinecache to opt_setinlinecache.
	Check label_type.  Generate nop if necessary to tracing.  Process
	duphash.  Remove tracecoverage.
	(create_rtl_insn_info_table): Don't use mask RUBY_EVENT_LINE.
	(rtl_gen): Update create_rtl_catch_table.
	* ruby.c (usage, setup_mjit_options): Process --jit-fp-opt.
	* thread.c: Add arg rtl_p for rb_iseq_clear_event_flags.
	(update_branch_coverage): Use RTL.
	* vm.c (ruby_vm_global_method_state): Remove.
	(ruby_vm_global_constant_state, ruby_vm_class_serial): Ditto.
	* vm_insnhelper.c (vm_trace): Use VM_TRACE_HOOK.

2018-10-26  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def: Remove handles_sp for RTL insns.
	(indseti, indsets, uindseti, uindsets, aindseti, hindseti): Pass
	res.
	(hindsets): Ditto.
	* mjit_rtl.c (struct insn_fun_features): Remove frame_p.
	(translate_iseq_insn): Use insn_leaf_flag instead of frame_p.
	* rtl_gen.c (non_trapping_rtl_insn_p, leaf_rtl_insn_p): New.
	(curr_catch_rtl_pos, add_nop_if_necessary): New.
	(append_vals): Call add_nop_if_necessary.
	(translate_stack_insn): Setup curr_catch_rtl_pos.  Generate one
	nop at most.
	(rtl_gen): Initialize curr_catch_rtl_pos.
	* tool/ruby_vm/views/insns_info.inc.erb: Add insn_leaf_flag.

2018-10-23  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (indset, uindset, aindset, hindset, indseti, indsets):
	Add result.
	(uindseti, uindsets, aindseti, hindseti, hindsets): Ditto.
	* mjit_rtl.c (get_insn_fun_features): Setup result flag for the
	above insns.
	* rtl_exec.c (common_indset_f, indset_f, uindset_f, aindset_f):
	Add res arg.
	(hindset_f, indseti_f, indsets_f, uindseti_f, uindsets_f): Ditto.
	(aindseti_f, hindseti_f, hindsets_f): Ditto.
	* rtl_gen.c (generate_aset_op): Generate the result.

2018-10-21  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (plus, uplus, eq, ne, ueq, une, ind, uind, splus): Delete attr leaf.
	(suplus, seq, sne, sueq, sune, plusi, plusf, eqi, eqf, nei, nef): Ditto.
	(indi, inds, uplusi, uplusf, ueqi, ueqf, unei, unef, uindi): Ditto.
	(uinds, aindi, hindi, hinds, indset, uindset, aindset, hindset): Ditto.
	(indseti, indsets, uindseti, uindsets, aindseti, hindseti): Ditto.
	(hindsets): Ditto.

2018-10-21  Vladimir Makarov  <vmakarov@redhat.com>

	* Merge with trunk @ 7a14608edc
	* insns.def: Add leaf attribute for corresponding RTL insns.
	(str_freeze_call, str_uminus): Add param cd.
	(or, and, uor, uand, sor, sand, suor, suand, ior, iand, sior): New.
	(siand, ori, andi, uori, uandi, iori, iandi, check_type): New.
	* iseq.c (get_insn_info_succinct_bitvector): Use info->positions.
	* mjit.c (mjit_valid_class_serial_p): Remove.
	* mjit.h (mjit_init_p): Remove the definition.  Use mjit_call_p
	instead.
	* mjit_rtl.c (get_insn_fun_features): Process or, and, uor, uand,
	sor, sand, suor, suand, ior, iand, sior, siand, ori, andi, uori,
	uandi, iori, iandi, check_type.  Change str_freeze_call and
	str_uminus features.
	(get_safe_insn): Process or, and, ior, iand, sor, sand, sior,
	siand, ori, andi, iori, iandi.
	(update_bb_kill_gen_by_insn): Pass me for mjit_call_iseq_normal.
	(update_compile_info_from_insns): Process or, and, sor, sand.
	* mjit_worker.c (struct rb_mjit_unit): Ne members compile_nums,
	node, compile_info.
	(mjit_iseq_compile_info): New.
	(create_list_node): Set up unit node.
	(sprint_uniq_filename): Add arg modificator.
	(compact_all_jit_code): Set up compile_nums.  Use it for
	sprint_uniq_filename.
	(convert_unit_to_func): Use compile_nums for sprint_uniq_filename.
	(convert_unit_to_func): Call mjit_rtl_compile instead of
	mjit_compile.
	* rtl_exec.c (fix_num_or, fix_num_and): New.
	(do_arithm): Check float_num_op and double_num_op.
	(fixnum_call, or_f, and_f): New.
	(ufixnum_call, uor_f, uand_f): New.
	(sfixnum_call, sor_f, sand_f): New.
	(sufixnum_call, suor_f, suand_f): New.
	(fixnum_fix_call, ori_f, andi_f): New.
	(ufixnum_fix_call, uori_f, uandi_f): New.
	(spec_fix_num_or, spec_fix_num_and): New.
	(ior_f, iand_f, sior_f, siand_f, iori, iandi): New.
	(str_freeze_call_f, str_minus_f): New args ec and cd.
	(call_super_val_f): Setup calling block_handler.  Use rec_val for
	calling recv.
	(check_type_f): New.
	(mjit_call_iseq_normal): Pass me to vm_call_iseq_setup_normal
	instead of ci and cc.
	* rtl_gen.c (update_stack_by_insn): Remove branchiftype.
	(make_imm_id, get_simple_insn): Process or, and.
	(translate_stack_insn): Process checktype.  Process cd in
	opt_str_freeze, opt_str_uminus.  Use var op for call_super.
	Remove branchiftype processing.  Process opt_or and opt_and.
	* vm_args.c (vm_caller_setup_arg_block): Remove prototype.
	(refine_sym_proc_call): Use MJIT_STATIC.
	* vm_insnhelper.c (lep_svar_get, lep_svar_set, check_match):
	Ditto.
	(vm_call_iseq_setup_normal): Use inside ALWAYS_INLINE.
	(vm_trace): Add processing RUBY_EVENT_LINE.
	* vm_insnhelper.h (lep_svar_get, lep_svar_set, check_match): Use
	MJIT_STATIC.
	(vm_change_insn): Don't check mjit_enabled in MJIT header.

2018-04-15  Vladimir Makarov  <vmakarov@redhat.com>

	* internal.h (rb_float_new_inline): Move v declaration where it is
	used.
	* insns.def (fplus, fminus, fmult, fdiv, fmod): Pass additional
	parameters for addresses of doubles.
	(feq, fne, flt, fgt, fle, fge): Ditto.
	(sfplus, sfminus, sfmult, sfdiv, sfmod): Ditto.
	(sfeq, sfne, sflt, sfgt, sfle, sfge): Ditto.
	(fplusf, fminusf, fmultf, fdivf, fmodf): Ditto.
	(feqf, fnef, fltf, fgtf, flef, fgef): Ditto.
	(fbteqf, fbfeqf, fbtnef, fbfnef, fbtltf, fbfltf, fbtgtf, fbfgtf):
	Ditto.
	(fbtlef, fbflef, fbtgef, fbfgef): Ditto.
	* rtl_exec.c (spec_cmpf): New macro.
	(common_spec_flo_cmp, ): Add two address args.  Use them.
	(do_spec_flo_cmp): Add two address args.  Pass them.
	(spec_op2_dcfun, spec_op2_dfun): New.
	(spec_flo_cmp_call, spec_flo_scmp_call): Pass two new args.
	(feq, fne, flt, fgt, fle, fge): Define with spec_op2_dcfun.
	(sfeq, sfne, sflt, sfgt, sfle, sfge): Ditto.
	(spec_flo_cmp_imm_op): Add new address arg.  Use it.
	(spec_op2i_dcfun, spec_op2i_dfun): New.
	(spec_flo_cmp_imm_call): Pass new arg.
	(feqf, fnef, fltf, fgtf, flef, fgef): Define with spec_op2i_dcfun.
	(spec_dbcmp_fun): New.
	(do_spec_flo_bcmp): Add two address args.  Use them.
	(spec_flo_bcmp_op): Add two address args.  Pass them.
	(spec_flo_bcmp_call): Pass new args.
	(fbteq, fbfeq, fbtne, fbfne, fbtlt, fbflt): Define with
	spec_dbcmp_cfun.
	(fbtgt, fbfgt, fbtle, fbfle, fbtge, fbfge): Ditto.
	(spec_dbcmpi_fun): New.
	(spec_flo_bcmp_imm_op): Add two address args.  Pass them.
	(fbteqf, fbfeqf, fbtnef, fbfnef, fbtltf, fbfltf): Define with
	spec_dbcmpi_cfun.
	(fbtgtf, fbfgtf, fbtlef, fbflef, fbtgef, fbfgef): Ditto.
	(spec_dbl2num): Add new arg.
	(darithmf): New.
	(spec_flo_num_plus, spec_flo_num_minus, spec_flo_num_mult): Define
	with darithm.
	(spec_flo_num_div, spec_flo_num_mod): Ditto.
	(do_spec_flo_arithm): Add three address args.  Use them.
	(spec_flo_arithm_op): Add three address args.  Pass them.
	(spec_flo_arithm_call): Pass three new args.
	(fplus, fminus, fmult, fdiv, fmod): Define with spec_op2_dfun.
	(spec_flo_sarithm_call): Pass three new args.
	(sfplus, sfminus, sfmult, sfdiv, sfmod): Define with
	spec_op2_dfun.
	(spec_flo_arithm_imm_op): Add two address args.  Pass them.
	(spec_flo_arithm_imm_call): Pass two new args.
	(fplusf, fminusf, fmultf, fdivf, fmodf): Define with
	spec_op2i_dfun.
	* mjit.c: Include ccan/list/list.h.
	(struct rb_mjit_unit_iseq): New member double.
	(struct insn_fun_features): Transform fields into bitfields.  Add
	new fields double, imm_double_p, cmp_double_p, special_assign_p,
	and result.
	(get_insn_fun_features): Set up new fields.
	(bit2char, set_bit, reset_bit, get_bit): New.
	(struct edge, struct bb, struct cfg): New.
	(create_edge, free_bb_sets, create_bb, free_bb, free_cfg): New.
	(create_bb_from_pos, build_cfg, print_edges, print_set, print_bb): New.
	(print_cfg): New.
	(get_var_double_num, update_bb_kill_gen_by_insn): New.
	(get_op_double_num): New.
	(bb_compare, bb_reachable_p, build_bb_sets): New.
	(translate_iseq_insn): Use update_bb_kill_gen_by_insn.  Pass
	additional arguments to speculative floating point insns.
	(translate_unit_iseq): Build CFG and BB sets.  Generate double C
	vars.
	(update_unit_iseq_info_from_insns): Set up double_p elements.
	(create_unit_iseq): Allocat space for double_p too.
	(mjit_init): Use a standard comment for falls through.

2018-04-15  Vladimir Makarov  <vmakarov@redhat.com>

	* iseq.h (struct iseq_compile_data): Add member throw_p.
	* compile.c (iseq_compile_each): Set up and use throw_p.  Add
	exception entries only when throw_p is true.

2018-04-05  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_insnhelper.c (opt_eq_func): Add -0.0 case for NEW_FLONUM.
	* internal.h (NEW_FLONUM): Set.
	(rb_float_flonum_value, rb_float_new_inline): Add code for new
	flonum and restore old code.
	* rtl_exec.c (float_num_eq, float_num_new): New code for new
	flonum.
	(spec_dbl2num): New.
	(spec_flo_num_{plus, minus, mult, div, mod}): Add code for new
	flonum.
	(do_spec_flo_arithm): Ditto.
	(spec_flo_arithm_call, spec_flo_sarithm_call): Pass spec_flo_num
	functions.
	(spec_flo_arithm_imm_call): Ditto.

2018-02-21  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Add results for Graal 0.31 with `--native` and some
	performance analysis.

2018-02-20  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Use results for Graal 0.31 instead of 0.22.

2018-02-19  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Fixing more typos.

2018-02-19  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Fix typos.

2018-02-19  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Modify to reflect all changes on the branch.

2018-02-17  Vladimir Makarov  <vmakarov@redhat.com>

	* internal.h (NEW_FLONUM): Reset.

2018-02-16  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def: Switch off stack insns.
	* internal.h (NEW_FLONUM): New.
	(rb_float_flonum_value, rb_float_new_inline): Add new code.
	* tool/instruction.rb (make_header_operands): Generate
	RB_UNUSED_VAR.
	(make_header_stack_pops): Ditto.
	* rtl_gen.c (create_rtl_catch_table): Set up iseq except_p.

2018-02-13  Vladimir Makarov  <vmakarov@redhat.com>

	* common.mk: Update dependencies.
	* eval.c (ruby_setup): Process rtl_gen_init return value.
	* rtl_gen.c: Edit comments.  Remove unnecessary {}.
	(rtl_gen_jump_buf): New.
	(varr_malloc_failure): New.
	(VARR_OP(T, create), VARR_OP(T,expand)): Call varr_malloc_failure
	in case of allocation failure.
	(get_cd): Remove unused arg.
	(rtl_gen, rtl_gen_init): Process generation failures.
	* vm_core.h (rtl_gen_init): Change return type.

2018-02-12  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (get_insn_fun_features): Add case for call_super_val.
	(translate_iseq_insn): Declare buf2.  Use it for rec.  Process
	call_super_val.
	* vm_exec.c (vm_exec_core): Switch on code for reg vars.

2018-02-07  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (var2ivar): Use temp2ivar and loc2ivar instead.
	* mjit.c (get_insn_fun_features): Use temp2ivar and loc2ivar
	instead of var2ivar.
	(update_unit_iseq_info_from_insns): Ditto.
	(translate_iseq_insn): Ditto.  Remove last arg in
	mjit_const_cached_val call.
	* rtl_exec.c (var2ivar_f): Rename to temp2ivar.
	(loc2ivar_f): New.
	(mjit_var2ivar_no_check): Rename to mjit_temp2ivar_no_check.
	(mjit_loc2ivar_no_check): New.
	(mjit_var2ivar): Rename to mjit_temp2ivar.
	(mjit_loc2ivar): New.
	* rtl_gen.c (translate_stack_insn): Use temp2ivar and loc2ivar
	instead of var2ivar.

2018-01-28  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (optimize_catch_table): New.
	(iseq_peephole_optimize): Call it.
	(iseq_compile_each): Switch off pop generation for NODE_ENSURE.
	Use the right code for NODE_OP_ASGN2.
	* iseq.c (rb_iseq_disasm): Print temp only for RTL.
	* rtl_exec.c (RTL_ASSERT): New. Use it instead of VM_ASSERT.
	(const_ld_val_f, const_cached_val_ld_f): Don't setup SP.
	(call_super_f): Rename to call_super_val_f.
	(call_super_val_f, check_keyword_f): New.
	(trace_f): Set up data for returns.
	* rtl_gen.c (RTL_GEN_DEBUG): Move upper.
	(VARR_T): Use size_t instead of unsigned.
	(use_only_temp_result_p): New.
	(struct stack_slot): Add source_insn_pos.
	(max_stack_depth, loc_stack_count): Move up.
	(initialize_loc_stack_count): New.
	(prepare_loc_var_rewrite): Rename to prepare_stack_slot_rewrite.
	Move up.
	(prepare_stack_slot_assign): New.
	(pop_stack_slot, push_stack_slot): Move up.
	(trunc_stack, change_stack_slot): New.
	(prepare_loc_var_push): Rename to prepare_stack_slot_assign.  Move
	up
	(push_val): Add arg source_insn_pos.  Use push_stack_slot.
	(restore_stack_slots): Use trunc_stack and push_stack_slot.
	(get_local, putobject): New arg temp_only_p.
	(move_to_temp): New.
	(put_args_on_stack): Use trunk_stack.
	(make_imm_id): Process indset.
	(tune_stack): Use trunc_satck. Future code for ANY.
	(generate_aset_op): New arg str.  Process case with non-nil str.
	Always use str2val.
	(translate_stack_insn): Put nop for unreachable code mention in
	catch_bound_pos.  Use use_only_temp_result_p.  Use putobject for
	putnil.  Always use str2val for putstring.  Change and move assert
	and use chang_stack_slot for setn.  Implement checkkeyword.
	Generate call_super_val.  Add trace if necessary for jump to
	leave optimization.
	(translate): Use trunc_stack.
	(rtl_gen): Use initialize_loc_stack_count.  Print name of iseq.
	Create use_only_temp_result_p.
	(rtl_gen_finish): Destroy use_only_temp_result_p.
	* insns.def (call_super): Rename to call_super_val.  Add new
	call_super.
	(check_keyword): New.
	(update_saved_stack_slots): Set up use_only_temp_result_p.
	Process non-temp for stack addr.  Add debug print about putting
	into a temp.
	(setup_labels_from_catch_table): Print catch entry sp.  Add
	assert.  Use TEMP instead of ANY.  Use tune_stack.
	(make_temp): New.
	(update_stack_by_insn): Use trunc_stack, push_stack_slot, and
	change_stack_slot.  Use use_only_temp_result_p.  Pass source insn
	pos tp push_val.  Switch off specific code for putstring.  Add
	code for setlocal.  Call change_stack_slot for setn.
	(find_stack_values_on_labels): Use trunc_stack.  Truncate and
	setup use_only_temp_result_p.  Check label_processed_p for exit.
	* iseq.c (rb_iseq_disasm):
	* test/ruby/test_exception.rb (test_too_many_args_in_eval):
	Increase the range.
	* test/ruby/test_iseq.rb b/test/ruby/test_iseq.rb
	(test_frozen_string_literal_compile_option): Use branchnil.
	* test/ruby/test_optimization.rb (test_opt_case_dispatch): Use
	opt_case_dispatch.
	* test/ruby/test_settracefunc.rb (test_return2): Add assert for
	line 6.
	(test_break): Restore the original code.
	* vm_core.h (RUBY_VM_THREAD_VM_STACK_SIZE): Increase.
	(RUBY_VM_THREAD_MACHINE_STACK_SIZE): Ditto.
	* vm_dump.c (rb_vmdebug_debug_print_pre): Set/restore iseq_rtl_p.
	* vm_exec.h (DEBUG_ENTER_INSN): Use rb_vmdebug_debug_print_pre.

2017-12-18  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_gen.c: Change the top comment.
	(UNREACHED_LABEL): Remove.
	(CONT_LABEL, BRANCH_LABEL): Redefine.
	(pos_processed_p): Rename to label_processed_p.
	(enum slot_type): Move up.  Add ANY.
	(struct stack_slot): Move up.  Define temp only for NDEBUG.
	(stack_slot, stack): Move up.
	(push_val, print_stack_slot, print_satck, stack_slot_eq): New.
	(saved_stack_slots, label_start_stack_slot): New.
	(save_stack_slots, restore_stack_slots, update_saved_stack_slots):
	New.
	(stack_on_label_change_p): New.
	(process_label): Rewrite.
	(setup_labels_from_catch_table): Push ANY.
	(print_label_pos_stack): New.
	(update_label_pos_stack): Remove.
	(update_stack_by_insn): New.
	(calculate_stack_depth): Rename to find_stack_values_on_labels.
	Rewrite it by using update_stack_by_insn.
	(push_stack_slot): Do not process TEMP.
	(push_temp_result): New.
	(new_top_stack_temp_var): Use push_temp_result.
	(to_var): Do not process TEMP.  Remove assert for STR, use if
	instead.
	(to_temp): Ditto.
	(prepare_stack_rewrite): Rename to prepare_loc_var_rewrite.
	(push_result): Remove.
	(set_local): Use index in the stack for TEMP.
	(put_top_on_stack): Remove.
	(get_cd): Add return to remove a compiler warning.
	(generate_unary_op): Add assert.  Use index in the stack for TEMP.
	(get_binary_ops): Ditto.  Use push_temp_result.
	(tune_stack_slot, tune_stack): New.
	(generate_rel_op): Use tune_stack.
	(generate_aset_op): Add assert.  Use index in the stack for TEMP.
	(adjust_stack): Remove.
	(generate_leave): Add assert.  Use index in the stack for TEMP.
	(unreachable_code_p): New.
	(translate_stack_insn): Pass the prev insn.  Don't change
	unreachable_code_p for throw.  Use tune_stack and
	unreachable_code_p.  Add more debug print.  Rewrite processing
	dup, dupn, swap, topn, setn, adjuststack.  Remove put_on_stack for
	gentinlinecache.  Process TEMP for string in opt_aset_with.  Use
	push_temp_result.
	(translate): Reset unreachable_code_p.  Pass prev insn to
	translate_stack_insn.
	(rtl_gen): Add debug print.
	(rtl_gen_init): Create saved_stack_slots and label_start_stack_slot.
	(rtl_gen_finish): Destroy saved_stack_slots and label_start_stack_slot.

2017-12-11  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_gen.c (translate_stack_insn): Generate const_cached_val_ld.

2017-12-11  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Remove output of result index for
	get inline cache and ivar2var insns.  Output implicit operands
	separately for simple insns.

2017-12-09  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (splus, sminus, smult, sdiv, smod, seq, sne, slt):
	New.
	(sgt, sle, sge, suplus, suminus, sumult, sudiv, sumod, sueq):
	Ditto.
	(sune, sult, sugt, sule, suge, siplus, siminus, simult, sidiv):
	Ditto.
	(simod, sieq, sine, silt, sigt, sile, sige, sfplus, sfminus): Ditto.
	(sfmult, sfdiv, sfmod, sfeq, sfne, sflt, sfgt, sfle, sfge): Ditto.
	* mjit.c (struct insn_fun_features): New member simple_p.
	(get_insn_fun_features): Process the new insns.
	(get_safe_insn): Ditto.
	(translate_iseq_insn): Process vindex_t operand of a simple insn.
	* rtl_exec. (scmp_call, sucmp_call): New macros.
	(seq, sne, slt, sgt, sle, sge, sueq, sune, sult, sugt, sule): New
	functions.
	(suge): Ditto.
	(spec_fix_scmp_call, spec_flo_scmp_call): New macros.
	(sieq, sine, silt, sigt, sile, sige, sfeq, sfne, sflt, sfgt): New functions.
	(sfle, sfge): Ditto.
	(do_arithm, arithm_op): Change arg change_p to offset.
	(arithm_call, uarithm_call): Pass offset.
	(sarithm_call, suarithm_call): New macros.
	(splus, sminus, smult, sdiv, smod, suplusu, suminusu, sumult): New functions.
	(sudiv, sumod): Ditto.
	(arithm_imm_op): Change arg change_p to offset.
	(spec_fix_sarithm_call, spec_flo_sarithm_call): New macros.
	(siplus, siminus, simult, sidiv, simod, sfplus, sfminus, sfmult):
	New functions.
	(sfdiv, sfmod): Ditto.
	* rtl_gen.c (get_simple_insn): New.
	(generate_bin_op): Use simple insn.

2017-12-08  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Remove output of nf for {temp,
	loc, val}_ret.

2017-12-08  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (temp_ret, loc_ret, val_ret): Remove nf.
	* rtl_exec.c (ret_trace): Remove.
	(temp_ret_f, loc_ret_f, val_ret_f): Remove nf.
	* rtl_gen.c (generate_call): Generate [simple_]call_recv.
	(generate_leave): Remove nf.

2017-12-06  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (temp2temp, temp_swap, temp_reverse, loc2temp): Use
	tindex_t and get_temp_addr.
	(temp2loc, val2temp, const2var, const_ld_val): Ditto
	(const_cached_val_ld): Ditto.
	(get_inline_cache, specialobj2var, special2var, global2var): Ditto
	(ivar2var, cvar2var, iseq2var): Ditto
	(cont_op1, cont_op2): Remove.
	(length, size, empty_p, succ, not, unot): Use tindex_t and
	get_temp_addr, remove cont insn, don't pass res.
	(spec_not): Ditto, modify pc.
	(plus, minus): Use tindex_t and get_temp_addr, remove cont insn,
	don't pass res.
	(mult, div, mod, ltlt, ind, eq, ne, lt, gt, le, ge, uplus): Ditto.
	(uminus): Ditto.
	(umult, udiv, umod, uind, ueq, une, ult, ugt, ule, uge):
	Ditto.
	(iplus, iminus, imult, idiv, imod, aind, hind, ieq, ine, ilt):
	Ditto, modify pc.
	(igt, ile, ige, fplus, fminus, fmult, fdiv, fmod, feq, fne, flt): Ditto.
	(fgt, fle, fge): Ditto.
	(plusi, plusf, minusi, minusf, multi, multf, divi, divf): Use
	tindex_t and get_temp_addr, remove cont insn, don't pass res.
	(modi, modf, ltlti, indi, inds, eqi, eqf, nei, nef, lti, ltf):
	Ditto.
	(gti): Ditto.
	(gtf, lei, lef, gei, gef, uplusi, uplusf, uminusi, uminusf): Ditto.
	(umulti, umultf, udivi, udivf, umodi, umodf, uindi, uinds, ueqi):
	Ditto.
	(ueqf, unei, unef, ulti, ultf, ugti, ugtf, ulei, ulef, ugei):
	Ditto.
	(ugef): Ditto.
	(iplusi, iminusi, imulti, idivi, imodi, aindi, hindi, hinds):
	Ditto, modify pc.
	(ieqi): Ditto.
	(inei, ilti, igti, ilei, igei, fplusf, fminusf, fmultf, fdivf):
	Ditto.
	(fmodf, feqf, fnef, fltf, fgtf, flef, fgef): Ditto.
	(cont_btcmp, cont_bfcmp, bteq, bfeq, btne, bfne, btlt, bflt): Use
	tindex_t and get_temp_addr, remove cont insn, don't pass res.
	(btgt): Ditto.
	(bfgt, btle, bfle, btge, bfge, ubteq, ubfeq, ubtne, ubfne, ubtlt):
	Ditto.
	(ubflt, ubtgt, ubfgt, ubtle, ubfle, ubtge, ubfge, ibteq, ibfeq):
	Ditto.
	(ibtne, ibfne, ibtlt, ibflt, ibtgt, ibfgt, ibtle, ibfle, ibtge):
	Ditto.
	(ibfge, fbteq, fbfeq, fbtne, fbfne, fbtlt, fbflt, fbtgt, fbfgt):
	Ditto.
	(fbtle, fbfle, fbtge, fbfge, bteqi, bfeqi, btnei, bfnei, btlti):
	Ditto.
	(bflti, btgti, bfgti, btlei, bflei, btgei, bfgei, bteqf, bfeqf):
	Ditto.
	(btnef, bfnef, btltf, bfltf, btgtf, bfgtf, btlef, bflef, btgef):
	Ditto.
	(bfgef, ubteqi, ubfeqi, ubtnei, ubfnei, ubtlti, ubflti, ubtgti):
	Ditto.
	(ubfgti, ubtlei, ubflei, ubtgei, ubfgei, ubteqf, ubfeqf, ubtnef):
	Ditto.
	(ubfnef, ubtltf, ubfltf, ubtgtf, ubfgtf, ubtlef, ubflef, ubtgef):
	Ditto.
	(ubfgef, ibteqi, ibfeqi, ibtnei, ibfnei, ibtlti, ibflti, ibtgti):
	Ditto.
	(ibfgti, ibtlei, ibflei, ibtgei, ibfgei, fbteqf, fbfeqf, fbtnef):
	Ditto.
	(fbfnef, fbtltf, fbfltf, fbtgtf, fbfgtf, fbtlef, fbflef, fbtgef):
	Ditto.
	(fbfgef, to_string, concat_strings, defined_p, val_defined_p):
	Ditto.
	(temp_ret, make_range, make_array, make_hash, new_array_min):
	Ditto.
	(new_array_max, clone_array, splat_array, concat_array): Ditto.
	(check_match, bt_match, regexp_match1, regexp_match2, run_once):
	Ditto.
	* iseq.c (rb_insn_operand_intern): Process TS_INDEX_T.
	* mjit.c (get_insn_fun_features): Remove cont_op1, cont_op2.
	(translate_iseq_insn): Process TS_INDEX_T.
	* rtl_exec.c (const_ld_val_f, const2var_f, const_cached_val_ld_f):
	Remove res_ind.  Don't use var_assign.
	(mjit_const_cached_val_ld, get_inline_cache_f): Ditto.
	(mjit_get_inline_cache, specialobj2var_f, special2var_f): Ditto.
	(global2var_f, ivar2var_f, mjit_ivar2var_no_check, mjit_ivar2var):
	Ditto.
	(cvar2var_f, iseq2var_f, ary_hash_op, ary_hash_call, ary_hash_op):
	Ditto.
	(succ, common_not, not, unot, spec_not_f, do_cmp, cmp_op): Ditto.
	(cmp_call, ucmp_call, cmp_imm_op, cmp_fix_call, ucmp_fix_call):
	Ditto.
	(do_spec_fix_cmp, do_spec_flo_cmp, spec_fix_cmp_op): Ditto.
	(spec_flo_cmp_op, spec_op2_fun, spec_fix_cmp_call): Ditto.
	(spec_flo_cmp_call, spec_fix_cmp_imm_op, spec_flo_cmp_imm_op): Ditto.
	(spec_fix_cmp_imm_call, spec_fix_cmp_imm_op, spec_flo_cmp_imm_op):
	Ditto.
	(do_bcmp, bcmp_op, bcmp_call, bcmp_imm_op, bcmp_fix_call): Ditto.
	(ubcmp_fix_call, bcmp_flo_call, ubcmp_flo_call, spec_bcmp_finish):
	Ditto.
	(do_spec_fix_bcmp, do_spec_flo_bcmp, spec_fix_bcmp_op): Ditto.
	(spec_flo_bcmp_op, spec_fix_bcmp_call, spec_flo_bcmp_call): Ditto.
	(spec_fix_bcmp_imm_op, spec_flo_bcmp_imm_op): Ditto.
	(spec_fix_imm_bcmp_call, spec_flo_imm_bcmp_call, do_arithm):
	Ditto.
	(arithm_op, arithm_call, arithm_imm_op, arithm_fix_call): Ditto.
	(uarithm_fix_call, arithm_flo_call, uarithm_flo_call): Ditto.
	(do_spec_fix_arithm, do_spec_flo_arithm, spec_fix_arithm_op):
	Ditto.
	(spec_flo_arithm_op, spec_fix_arithm_call, spec_flo_arithm_call):
	Ditto.
	(spec_fix_arithm_imm_op, spec_flo_arithm_imm_op): Ditto.
	(spec_fix_arithm_imm_call, spec_flo_arithm_imm_call, do_ltlt):
	Ditto.
	(ltlt, common_ind, ind, uind, indi, uindi, inds, uinds, aind):
	Ditto.
	(hind, aindi, hindi, hinds, to_strin_f, defined_p_f): Ditto.
	(val_defined_p_f, str_freeze_call_f, make_range_f, make_array_f):
	Ditto.
	(make_hash_f, common_new_array_min_max, new_array_min_f): Ditto.
	(new_array_max_f, clone_array_f, splat_array_f, concat_array_f):
	Ditto.
	(check_match_f, bt_match_f, regexp_match1_f, regexp_match2_f):
	Ditto.
	(run_once_f): Ditto.
	* rtl_gen.c (generate_unary_op, generate_bin_op): Remove cont ops.
	(translate_stack_insn): Ditto.
	* tool/instruction.rb (op2typesig): Process tindex_t.
	* vm_exec.h (tindex_t): Define.

2017-11-29  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_gen.c: New file.
	* common.mk (COMMONOBJS): Add rtl_gen.o.
	* compile.c (rb_iseq_translate_threaded_code): Use RTL or stack
	insns depending on iseq_rtl_p.  Process TS_INSN insn args.
	(rb_iseq_original_iseq):  Ditto.
	(iseq_setup): Call rtl_gen.  Setup/restore iseq_rtl_p and generate
	encoded code for RTL.
	(calc_sp_depth): Pass FALSE as an additional arg to
	insn_stack_increase.
	(insn_data_to_s_detail): Process TS_INSN, TS_VINDEX, TS_SINDEX,
	TS_RINDEX.
	(iseq_build_from_ary_body): Ditto.
	* defs/opt_operand.def: Restore base version.
	* eval.c (ruby_setup): Call rtl_gen_init and rtl_get_finish.
	* insns.def: Use vindex_t for RTL instead of lindex_t.
	(temp_reverse): New.
	* iseq.c (rb_iseq_free): Free rtl_encoded and rtl_line_info_table.
	(iseq_memsize): Add size of RTL parts.
	(get_line_info): New arg rtl_p.  Use rtl parts if it is true.
	(find_line_no): New arg rtl_p.  Pass it to get_line_info.
	(rb_iseq_line_no): Pass TRUE to find_line_no.
	(rb_insn_operand_intern): Process TS_VINDEX. Use LONG2FIX.  Check
	cd on NULL.
	(iseq_rtl_p): New.
	(rb_iseq_disasm_insn): Use iseq_rtl_p.
	(rb_iseq_disasm_rtl_insn): New.
	(catch_type): Use the right table depending on iseq_rtl_p.
	(rb_iseq_disasm_rtl): New.
	(rb_iseqw_line_trace_each): User RTL parts.
	* mjit.c (get_insn_fun_features): Process temp_reverse.
	(translate_iseq_insn): Use RTL parts of iseq.  Process VINDEX_T.
	(translate_unit_iseq): Use RTL parts of iseq.
	(update_unit_iseq_info_from_insns): Ditto.  Process temp_reverse.
	(create_unit_iseq, mjit_store_failed_spec_insn): Use RTL parts of
	iseq.
	* mjit.h (mjit_execute_iseq_0, mjit_aot_process): Use RTL parts of
	iseq.
	* rtl_exec.c (temp_reverse_f): New.
	(define_class): Use RTL parts.
	* ruby.c (feature_flag_bits, dump_flag_bits): Add rtl.
	(process_options): Process --dump rtl.
	* template/insns_info.inc.tmpl (insn_stack_increase): Add new
	param opes.
	* tool/instruction.rb (sp_increase_c_expr): Use num_p to process
	opes.
	(op2typesig): Process TS_VINDEX.
	* vm.c (vm_set_top_stack, vm_set_eval_stack, invoke_block): Use
	rtl parts of iseq.
	(invoke_bmethod, vm_exec): Ditto.
	* vm_args.c (raise_argument_error): Ditto.
	* vm_backtrace.c (calc_lineno): Ditto.
	* vm_core.h (vindex_t): New.
	(struct rb_call_info, struct rb_call_data_with_kwarg): Use
	vindex_t.
	(struct rb_iseq_constant_body): Add new members rtl_size,
	rtl_encoded, rtl_line_info_table, rtl_catch_table, rtl_ary_p,
	rtl_line_info_size.
	(rtl_gen, rtl_gen_init, rtl_gen_finish, iseq_rtl_p): New externs.
	(rb_iseq_disasm_rtl, rb_iseq_disasm_rtl_insn): Ditto.
	* vm_dump.c (control_frame_dump, rb_vmdebug_debug_print_register):
	Use RTL parts of iseq.
	(rb_vmdebug_debug_print_pre): Ditto.
	* vm_exec.h (sindex_t, rindex_t): Use vindex_t to define them.
	* vm_insnhelper.c (vm_throw_start, vm_call_iseq_setup_normal): Use
	rtl parts.
	(vm_call_iseq_setup_tailcall, vm_invoke_iseq_block): Ditto.

2017-10-16  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c: Restore base version.
	* insns.def: Restore stack insns.  Use RTL versions of nop and
	trace.  Rename CALL_METHOD to RTL_CALL_METHOD.
	* iseq.c (rb_iseq_free, iseq_memsize): Process ci_[kw_]entries.
	(rb_insn_operand_intern): Restore base code for CALL_INFO,
	CALL_CACHE, and TS_LINDEX.
	(rb_insn_operand_intern, iseq_data_to_ary): Restore code for
	CALL_INFO and CALL_CACHE.
	* iseq.h (struct iseq_compile_data): Restore ci_[kw_]index.
	* vm_core.h (struct rb_iseq_constant_body): Restore ci_entries,
	cc_entries and ci_[kw_]size.
	* vm_insnhelper.h (CALL_METHOD): Rename to RTL_CALL_METHOD.
	Restore CALL_SIMPLE_METHOD.

2017-09-13  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (increase_unit_priority): Move verbose into a critical
	region.

2017-09-08  Vladimir Makarov  <vmakarov@redhat.com>

	* ruby.c (usage, setup_mjit_options): Make verbose parameterized.
	* mjit.h (struct mjit_options): Make verbose of type int.
	* mjit.c (MJIT_CHECK_LISTS): New macro.
	(check_list): New.
	(init_list, remove_from_list, get_from_list): Call check_list.
	(verbose): Add arg level.  Use verbose option parameter.
	(start_process): Print if verbose >= 2.
	(make_pch, start_unit, load_unit, worker, free_unit): Call verbose
	with level arg.
	(unload_units): Ditto.  Remove 1/10 of active units.
	(create_unit_iseq): Remove '1||'.
	(mjit_add_iseq_to_process): Check unit_iseq creation success.
	Call verbose with level arg.
	(mjit_redo_iseq, increase_unit_priority, mjit_cancel_all)
	(mjit_cont_free, mjit_init, mjit_finish): Call verbose with level
	arg.

2017-09-08  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Remove note about ISEQ unloading implementation for
	TODO list.

2017-09-08  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (struct rb_mjit_unit): New field freed_p.
	(worker): Discard unit if freed_p.
	(create_unit): Initiate freed_p.
	(mjit_free_iseq): Set up freed_p if in generation status.  Do not
	discard it.

2017-09-07  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (mark_thread_unit_iseqs): Use end_marker_cfp instead of
	start_cfp.
	(cancel_thread_frames): New.
	(mjit_cancel_all): Use it.  Cancel continuation frames too.

2017-09-07  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (stop_mjit_generation_p): New.
	(create_cont): Setup stop_mjit_generation_p.
	(mjit_add_iseq_to_process): Check it.
	(mjit_get_iseq_fun): Ditto.  Set up jit_code for AOT.
	(mjit_cont_free): Check stop_mjit_generation_p.
	(mjit_init): Initiate stop_mjit_generation_p.

2017-09-07  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (struct mjit_options): New field max_cache_size.
	* ruby.c (usage): Describe new cache options.
	(setup_mjit_options): Process them.
	* mjit.c (MAX_LOADED_UNITS): Remove.
	(DEFAULT_CACHE_SIZE, MIN_CACHE_SIZE): New macros.
	(unload_units, mjit_add_iseq_to_process): Use max_cache_size
	instead of MAX_LOADED_UNITS.
	(mjit_init): Set up max_cache_size.

2017-09-06  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_core.h (overall_calls): Change onto resume_calls and
	stop_calls.
	* mjit.h (mjit_cont_new, mjit_cont_free): New externs.
	(mjit_execute_iseq_0): Use resume_calls instead of overall_calls.
	* cont.c: Include mjit.h.
	(struct rb_context_struct): New field mjit_cont.
	(cont_free): Call mjit_cont_free.
	(cont_init): Call mjit_cont_new and set up mjit_cont field.
	* common.mk (cont.o): Add dependence on mjit.h.
	(mjit.o): Add dependence on vm_insnhelper.h.
	* mjit.c: Remove unload TODO.  Include vm_insnhelper.h.
	(struct rb_mjit_unit): Use char for high_priority_p and
	ep_neq_bp_p.  New field used_code_p.  Change overall_calls onto
	resume_calls and stop_calls.
	(get_from_list): Use resume_calls and stop_calls.
	(load_unit): Remove assert.  Use atomic.
	(create_unit_iseq): Use resume_calls and stop_calls.  Initialize
	used_code_p.
	(free_unit): Add print log.  Do not clear unit_iseq.
	(remove_iseq_from_unit): Remove.
	(struct mjit_cont): New,
	(free_conts, first_cont): New.
	(init_conts, create_cont, free_cont, finish_conts): New.
	(MAX_LOADED_UNITS): New.
	(mark_unit_iseqs, mark_thread_unit_iseqs, unload_units): New.
	(mjit_add_iseq_to_process): Add unloading.
	(mjit_redo_iseq): Remove assert.  Extend a critical section.
	Remove remove_iseq_from_unit call.
	(mjit_free_iseq): Use resume_calls and stop_calls.
	(mjit_cancel_all): Remove remove_iseq_from_unit call.
	(mjit_cont_new, mjit_cont_free): New functions.
	(mjit_init): Call init_conts.
	(unit_iseq_compare, print_statistics): Use resume_calls and
	stop_calls.
	(mjit_finish): Call finish_conts.

2017-08-25  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (done_units): Rename to active_units.
	(obsolete_units): New.
	(load_unit): Rewrite.
	(worker): Use discard_unit.  Rearrange critical sections.
	(init_workers): Initialize obsolete_units.
	(create_unit): Initialize handle.
	(free_unit): Call dlclose.
	(finish_workers): Free obsolete units.
	(create_iseq_unit, discard_unit): New.
	(mjit_add_iseq_to_process): Use create_iseq_unit, put the unit
	into obsolete unit list.
	(mjit_redo_iseq): Ditto.
	(mjit_free_iseq): Use discard_unit.
	(mjit_cancel_all): Put old unit into obsolete unit list.  Use
	create_iseq_unit for new unit.

2017-08-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (struct rb_mjit_unit_iseq): New field next.
	(free_unit_iseq_list): Remove.
	(unit_iseq_list): New.
	(curr_mjit_iseq_num): Rename to curr_unit_iseq_num.
	(create_unit_iseq): Always allocate.  Initialize next.
	(free_unit_iseq): Remove.
	(free_unit): Remove free_unit_iseq call.  Set up unit_iseq.
	(finish_units): Free unit iseqs.
	(mjit_redo_iseq): Reset handle.
	(get_done_unit_iseqs_num): Rename to get_unit_iseqs_num.  Use
	unit_iseq_list.
	(get_sorted_unit_iseqs): Use unit_iseq_list.

2017-08-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (unit_iseq_compare): Rename bi into ui.

2017-08-23  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (struct rb_mjit_unit_list): New field length.
	(init_list): New function.
	(add_to_list, remove_from_list): Update the length.
	(init_workers): Use init_list.
	(get_done_unit_iseqs_num): Remove ui.

2017-08-23  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (get_uniq_fname): Change file name.  Use always the same
	format.

2017-08-09  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Check trace_f return in a
	generated code.
	* rtl_exec.c (trace_f): Return a flag if speculation about
	equality of bp and ep changed.

2017-08-03  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (check_match_f, bt_match_f): Use res_ind in
	VM_ASSERT.

2017-08-02  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (mjit_free_iseq): Remove printing into stderr.

2017-08-02  Vladimir Makarov  <vmakarov@redhat.com>

	* vm-core.h (struct rb_iseq_constant_body): Rename batch_iseq to
	unit_iseq.
	* mjit.h (rb_mjit_batch_iseq): Rename to rb_mjit_unit_iseq.
	* mjit.c: Change comments assuming unit instead of batch and one
	iseq for unit.
	(batch_status): Rename to unit_status.
	(BATCH_NOT_FORMED, BATCH_IN_QUEUE, BATCH_IN_GENERATION): Rename to
	UNIT_NOT_FORMED, UNIT_IN_QUEUE, UNIT_IN_GENERATION.
	(UNIT_FAILED, UNIT_SUCCESS): Rename to UNIT_FAILED, UNIT_SUCCESS.
	(struct rb_mjit_batch): Rename to rb_mjit_unit.  Rename field
	batch_iseq to unit_iseq.  Rename iseqs_size to iseq_size.
	(struct rb_mjit_batch_iseq): Rename to rb_mjit_unit_iseq.  Rename
	field batch to unit.
	(get_batch_iseq_fname): Rename to get_unit_iseq_fname.
	(batches_in_translation): Rename to units_in_translation.
	(rb_mjit_batch_list): Rename to rb_mjit_unit_list.
	(batch_queue): Rename to unit_queue.
	(done_batches): Rename to done_units.
	(translate_batch_iseqs): Rename to translate_batch_iseq.
	(start_batch): Rename to start_unit.
	(load_batch): Rename to load_unit.
	(free_batch_list, free_batch_iseq_list, curr_batch): Rename to
	free_unit_list, free_unit_iseq_list, curr_unit.
	(curr_batch_num): Rename to curr_unit_num.
	(update_batch_iseq_info_from_insns): Rename to
	update_unit_iseq_info_from_insns.
	(create_batch_iseq, create_batch): Rename to create_unit_iseq,
	create_unit.
	(free_batch_iseq, finish_batches, remove_iseq_from_batch): Rename
	to free_unit_iseq, finish_units, remove_iseq_from_unit.
	(finish_forming_curr_batch, increase_batch_priority): Rename to
	finish_forming_curr_unit, increase_unit_priority.
	(get_done_batch_iseqs_num, batch_iseq_compare): Rename to
	get_done_unit_iseqs_num, unit_iseq_compare.
	(get_sorted_batch_iseqs): Rename to get_sorted_unit_iseqs.

2017-08-02  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (struct rb_mjit_batch): Remove first, last, and
	active_iseqs_num.  Add batch_iseq.
	(struct rb_mjit_batch_iseq): Remove prev, next.
	(get_from_list): Assume one batch iseq.
	(translate_batch_iseqs): Ditto.
	(load_batch): Ditto.  Don't use RTLD_GLOBAL.
	(create_batch_iseq): Use field batch as a link for free batch
	iseqs.
	(create_batch): Remove active_iseqs_num initialization.
	(free_batch_iseqs): Remove.
	(free_batch): Assume one batch iseq.
	(add_iseq_to_batch, remove_iseq_from_batch): Ditto.  Remove
	active_iseqs_num update.
	(finish_batches): Use field batch to link free batch iseqs.
	(quick_response_p, MAX_BATCH_ISEQ_SIZE): Remove.
	(mjit_add_iseq_to_process): Always finish forming the current
	batch.
	(mjit_redo_iseq): Don't check active_iseqs_num.
	(mjit_cancel_all): Use ep instead of bp.  Assume one batch iseq.
	(get_done_batch_iseqs_num): Assume one batch iseq.
	(get_sorted_batch_iseqs): Ditto.

2017-07-21  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (iseq_compile_each): Setup parent except_p for return.

2017-07-21  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (ruby_vm_global_method_state): New extern.
	(ruby_vm_global_constant_state): Ditto.
	(struct case_arg): New field last_dst.
	(print_case): Use it.
	(translate_iseq_insn): Reset the field.  Check
	ruby_vm_global_constant_state and ruby_vm_global_constant_state
	for speculative insns.  Add call_super in assert for speculative
	calls.  Generate mjit_check_cc_attr_p for iseq calls.

2017-07-21  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (const_cached_val_ld_f, set_inline_cache_f): Use
	atomic.  Make atomic a last assignment.
	(val_ret_f): Skip frame if necessary.
	* vm_insnhelper.c (vm_getivar): Use atomic.
	(vm_getivar_spec_big, vm_getivar_spec_small): Add asserts.
	(vm_setivar_spec_big, vm_setivar_spec_small): Ditto.
	(vm_search_method): Use atomic.
	* vm_insnhelper.h (VM_ATOMIC_SET, VM_ATOMIC_INC): New macros.
	(NEXT_CLASS_SERIAL, INC_GLOBAL_METHOD_STATE): Use the new macros.
	(INC_GLOBAL_CONSTANT_STATE): Ditto.
	* vm_method.c (method_entry_get_without_cache): Use VM_ATOMIC_SET.

2017-07-21  Vladimir Makarov  <vmakarov@redhat.com>

	* common.mk (gc.o): Add dependence on mjit.h.
	* gc.c: Include mjit.c.
	(gc_enter): Call mjit_gc_start.
	(gc_exit): Call mjit_gc_finish.
	* mjit.h (mjit_redo_iseq): Add an arg.
	(mjit_gc_start, mjit_gc_finish): New externs.
	(mjit_change_iseq): Add an arg.  Pass the arg to mjit_redo_iseq.
	Increment failed_jit_calls depending on it.
	* mjit.c: Rename IN_EXECUTION to IN_GENERATION.
	(struct global_spec_state): Make trace_p and bop_redefined_p
	unsigned.
	(mjit_gc_wakeup, in_gc, batches_in_translation): New.
	(CRITICAL_SECTION_START, CRITICAL_SECTION_FINISH): Add debug
	level.  Pass 3 for every call.
	(translate_batch_iseqs): Change print format for trace_p and
	bop_redefined_p.
	(start_batch): Wait gc finish before translation.  Pass signal
	after the translation.
	(worker): Rearrange CRITICAL_SECTION_FINISH.  Add missed arg for
	verbose call.  Add missed CRITICAL_SECTION_START.
	(mjit_redo_iseq): Add arg.  Increase mutation number depending on
	it.  Rearrange critical section.
	(mjit_ivar_spec_fail): Pass new arg to mjit_redo_iseq.
	(mjit_free_iseq): Unload batch.  Rearrange
	CRITICAL_SECTION_FINISH.
	(mjit_cancel_all, mjit_ep_eq_bp_fail): Set up jit_code for
	canceled iseqs.
	(mjit_gc_start, mjit_gc_finish): New.
	(mjit_init): Reset in_gc and batches_in_translation.  Create
	mjit_gc_wakeup.
	(mjit_finish): Destroy mjit_gc_wakeup.
	* rtl_exec.c (op_val_call_end, op_call_end): Pass new arg to
	mjit_change_iseq.
	* vm_insnhelper.h (vm_change_insn): Call mjit_change_iseq only
	when the insn is really changing.  Pass new arg.

2017-07-21  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (iseq_compile_each): Set up call_c_func_p for
	rune_once.
	* mjit.c (get_insn_fun_features): Remove case for run_once.

2017-07-17  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (start_process): Use vfork instead of fork.  Redirect
	stdout to /dev/null.  Exit on exec failure.

2017-07-07  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_core.h (RUBY_VM_THREAD_VM_STACK_SIZE): Double it.
	(RUBY_VM_THREAD_MACHINE_STACK_SIZE): Ditto.

2017-07-07  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Underline that MJIT can works only on few small
	programs.

2017-06-16  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Some text corrections in benchmarking section.

2017-06-15  Vladimir Makarov  <vmakarov@redhat.com>

	* README.md: Update benchmark data.

2017-06-15  Vladimir Makarov  <vmakarov@redhat.com>

	* MJIT-benchmarks/compare.rb: Split by only first ':'.  Simplify
	the code.
	* MJIT-benchmarks/optcarrot-compare.rb: New.

2017-06-15  Vladimir Makarov  <vmakarov@redhat.com>

	* MJIT-benchmarks/compare.rb: New.
	* MJIT-benchmarks/sieve.rb: New.

2017-06-13  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def (unot, spec_not): New insns.
	* rtl_exec.c (common_not): New.
	(not_f): Use it.
	(unot_f): New.
	(check_cc_attr_p): New.
	(mjit_check_cc_attr_p): Use it.
	(spec_not_f): New.
	* mjit.c (get_insn_fun_features): Process unot and spec_not.
	(get_safe_insn): Process not and spec_not.

2017-06-12  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (iplus, ...): Get new_insn and change the insn if
	necessary.
	(iplusi, ...): Ditto.
	(aindset, ...): Ditto.
	(aindseti, ...): Ditto.
	(ibteq, ...): Ditto.
	(fbteq, ...): Ditto.
	(ibteqi, ...): Ditto.
	(fbteqf, ...): Ditto.
	* rtl_exec.c (do_spec_fix_cmp, do_spec_flo_cmp, spec_fix_cmp_op):
	New param new_insn.
	(spec_flo_cmp_op, spec_fix_cmp_imm_op, spec_flo_cmp_imm_op):
	Ditto.
	(spec_bcmp_finish, do_spec_flo_bcmp, spec_fix_bcmp_op): Ditto.
	(spec_flo_bcmp_op, spec_fix_bcmp_imm_op, do_spec_fix_arithm):
	Ditto.
	(do_spec_flo_arithm, spec_fix_arithm_op, spec_flo_arithm_op):
	Ditto.
	(spec_fix_arithm_imm_op, spec_flo_arithm_imm_op, aind, hind):
	Ditto.
	(aindi, hindi, hinds, aindset_f, hindset_f, aindseti_f): Ditto.
	(hindseti_f, hindsets_f): Ditto.
	* mjit.c (translate_iseq_insn): Don't generate setting pc for
	speculative insns.  Generate vm_change_insn calls.
	(translate_batch_iseqs): Generate declarations of new_insn.

2017-06-12  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (aind_f, hind_f, aindi_f, hindi_f, hinds_f): Use
	LIKELY.
	(aindset_f, hindset_f, aindseti_f, hindesti_f, hindsets_f): Ditto.

2017-06-12  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (NUM_CALLS_TO_ADD): Make it 5.

2017-06-09  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (JIT_ISEQ_SIZE_THRESHOLD): New.
	(mjit_execute_iseq_0, mjit_aot_process): Use it.

2017-06-08  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (mjit_increase_iseq_priority): Remove.
	(NUM_CALLS_TO_PRIORITY_INCREASE): Remove.
	(mjit_execute_iseq_0): Don't call mjit_increase_iseq_priority.
	* mjit.c (struct rb_mjit_batch): New member high_priority_p.
	(add_to_list): Nullify prev.
	(get_from_list): Rewrite to choose the best batch.
	(create_batch): Initialize high_priority_p.
	(move_iseq_to_batch): Remove.
	(mjit_increase_iseq_priority): Remove.
	(increase_batch_priority): New.
	(mjit_get_iseq_fun): Use increase_batch_priority instead of
	mjit_increase_iseq_priority.
	(print_statistics): Print JIT calls summary.

2017-06-06  Vladimir Makarov  <vmakarov@redhat.com>

	* vm-core.h (struct rb_control_frame_struct): Remove restrict for
	pc, ep, bp.
	* tool/minimize_mjit_header.rb (cflags): Remove
	-Werror=incompatible-pointer-types.

2017-05-31  VladimirMakarov  <vmakarov@redhat.com>

	* README.md: Add performance data.

2017-05-31  Vladimir Makarov  <vmakarov@redhat.com>

	* MJIT-benchmarks: New directory.
	* MJIT-benchmarks/{aread, awrite, aref, aset, bench, call}.rb: New
	files.
	* MJIT-benchmarks/{complex-madelbrot, const, const2}.rb: Ditto.
	* MJIT-benchmarks/{fannk, fib, ivread, ivwrite, madelbrot}.rb:
	Ditto.
	* MJIT-benchmarks/{meteor, nbody, nest-ntimes, nest-while}.rb:
	Ditto.
	* MJIT-benchmarks/{norm, nsvb, pent, red-black, trees, while}.rb:
	Ditto.

2017-05-30  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Output except_p for
	mjit_iseq_call.
	* mjit.h (mjit_init_p): Make constant for JIT header.
	(mjit_vm_exec_0): Add arg except_p.
	(mjit_call_iseq_finish): Ditto.  Pass it to mjit_vm_exec_0.
	(mjit_iseq_call): Add arg except_p.  Pass it to mjit_call_iseq_finish.

2017-05-29  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (iseq_setup): Update iseq except_p from the catch
	table.
	(iseq_compile_each): Use except_p instead of
	break_next_redo_raise_p.
	* mjit.c (update_batch_iseq_info_from_insns): Ditto.  Remove
	checking the catch table.
	* rtl_exec.c (mjit_vm_exec_0, mjit_vm_exec): Use except_p.
	* vm.c (invoke_block): Ditto.  Don't use VM_FRAME_FLAG_FINISH.
	Call mjit_execute_iseq.
	* vm_core.h (struct rb_iseq_constant_body): Remove
	break_next_redo_raise_p.  Add except_p.

2017-05-29  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (case_dispatch_f): Add T_FIXNUM to switch cases.
	* mjit.c (get_insn_fun_features): Make case_dispatch a special
	insn.
	(struct case_arg): New.
	(print_case): New.
	(translate_iseq_insn): Generate case_dispatch as a special insn.

2017-05-27  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (mjit_check_self_p, mjit_ivar2var_no_check): New.
	(mjit_val2ivar_no_check, mjit_var2ivar_no_check): New.
	(mjit_val2ivar, mjit_ivar2var): Use vm_getivar_spec,
	vm_setivar_spec.
	(mjit_var2ivar, aindseti_f): Remove unused var.
	(mjit_call_iseq_finish, mjit_iseq_call): Remove cosnt from iseq
	arg.
	* vm_insnhelper.c (vm_getivar_spec_big, vm_getivar_spec_small):
	New.
	(vm_getinstancevariable_spec): Rename to vm_getivar_spec.
	(vm_setivar_spec_big, vm_setivar_spec_small): New.
	(vm_setinstancevariable_spec): Rename to vm_getivar_spec.
	* mjit.c (struct rb_mjit_batch): Remove ep_neq_bp_p.
	(struct rb_mjit_batch_iseq): Add ep_neq_bp_p, ivar_spec,
	ivar_serial, use_temp_vars_p.
	(update_tc_from_insns): Remove.
	(translate_iseq_insn): Add ivar speculative access generation
	without check.
	(translate_batch_iseqs): Calculate ep_neq_bp_p from iseqs one.
	Use iseq use)temp_vars_p.  Generate call mjit_ep_eq_bp_fail.
	Check ivar_spec.
	(update_batch_iseq_info_from_insns): New.
	(create_batch_iseq): Initialize ep_neq_bp_p, ivar_spec,
	ivar_serial, use_tem_vars_p.  Call
	update_batch_iseq_info_from_insns.
	(mjit_ivar_spec_fail, mjit_ep_eq_bp_fail): New.
	* mjit.h (mjit_ivar_spec_fail, mjit_ep_eq_bp_fail): New protoypes.

2017-05-26  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Generate errinfo assignment before
	rb_threadptr_tag_jump call.

2017-05-25  Vladimir Makarov  <vmakarov@redhat.com>

	* MJIT_KEEP (rb_threadptr_tag_jump): Add.
	* internal.h (rb_hash_tbl_raw): Export.
	* mjit.c (mjit_opts): Export.

2017-05-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (NEVER_JIT_ISEQ_FUN): Remove.
	(NUM_CALLS_TO_ADD): New.
	(NUM_CALLS_TO_PRIORITY_INCREASE): Change to 1000.
	(mjit_execute_iseq_0): Check n_calls to add iseq for JIT.  Remove
	NEVER_JIT_ISEQ_FUN entry.
	(mjit_aot_process): Remove code setting NEVER_JIT_ISEQ_FUN.
	* mjit.c (load_batch): Use NOT_ADDED_JIT_ISEQ_FUN instead of
	NEVER_JIT_ISEQ_FUN.

2017-05-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (get_done_batch_iseqs_num, batch_iseq_compare): New.
	(get_sorted_batch_iseqs): New.
	(print_statistics): Use get_sorted_batch_iseqs.

2017-05-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_batch_iseqs): Generate set_default_sp_0 call.
	* vm.c (vm_exec): Remove default sp setting.
	* vm_exec.c (vm_exec_core): Call set_default_sp.

2017-05-23  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_core.h (struct rb_iseq_constant_body): New field
	call_c_func_p.
	* mjit.h (mjit_execute_iseq_0): Never JIT iseq with call_c_func_p.
	(mjit_aot_process): Ditto.
	* compile.c (for_self_aref, for_self_aset): Set call_c_func_p up.

2017-05-19  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl-exec.c (aind_f, aindi_f, aindset_f, aindseti_f): Speed up
	using more speculation.

2017-05-18  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (translate_iseq_insn): Pass in_type_object_p.
	* rtl_exec.c (mjit_ivar2var, mjit_val2ivar, mjit_var2ivar): Add
	arg type_obj_p.
	(iseq2var_f): Set up in_type_object_p.
	* vm.c (rb_special_class_p): New.
	* vm_core.h (struct rb_iseq_constant_body): New field
	in_type_object_p.
	(rb_special_class_p): New prototype.
	(vm_getinstancevariable_spec, vm_setinstancevariable_spec): Add
	arg type_obj_p.

2017-05-17  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (mjit_execute_iseq_0, mjit_execute_iseq): Use do_inline.
	(mjit_change_iseq): Ditto.
	* vm_core.h (ruby_vm_check_ints): Ditto.

2017-05-15  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl-exec.c (mjit_const_cached_val_ld, mjit_get_inline_cache):
	New.
	* mjit.c (translate_iseq_insn): Generate the new function calls
	for speculative access to constants.  Don't copy cc and ci for
	special insns.

2017-05-15  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (struct insn_fun_features): Remove mjit_spec_p.
	(get_insn_fun_features): Don't use mjit_spec_p.
	(generate_result_on_stack): Remove.
	(set_failed_insn_str): Store info independently of profile option.
	(get_insn_mutation_num): Check on nop first.
	(translate_iseq_insn): Remove generate_result_on_stack calls.
	Copy ic for ivar insns.  Add speculative code for ivar insns.
	Remove code for ic generation.
	(translate_batch_iseqs): Generate self.
	(create_batch_iseq): Initiate mutation_insns by nop.
	(print_statistics): Check them.
	* rtl_exec.c (mjit_spec_ivar2var_f): Rename to
	mjit_ivar2var.  Change prototype.
	(mjit_spec_val2ivar_f): Rename to mjit_val2ivar.  Change
	prototype.
	(mjit_spec_var2ivar_f): Rename to mjit_var2ivar.  Change
	prototype.
	* vm_insnhelper.c (vm_getinstancevariable_spec): Change prototype.
	(vm_setinstancevariable_spec): Ditto.
	* MJIT_KEEP (rb_vm_get_cref): Add.

2017-05-12  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_core.h (struct rb_iseq_constant_body): Remove
	jit_mutations_num.
	* mjit.h (mjit_store_failed_spec_insn): New extern.
	* mjit.c (struct mjit_mutation_insns): New.
	(struct rb_mjit_batch_iseq): Add jit_mutations_num and
	mutation_insns.
	(set_failed_insn_str, get_insn_mutation_num): New.
	(translate_iseq_insn): Check mutation number for given insn.
	Generate set up of failed_insn_pc for failed speculation.  Use
	mutation number from the batch iseq.
	(translate_batch_iseqs): Use mutation number from the batch iseq.
	Generate definitions of failed_insn_pc and mutation_num call of
	mjit_store_failed_spec_insn.
	(create_batch_iseq): Allocate mutation_insns.
	(finish_batches): Free mutation_insns.
	(mjit_redo_iseq): Use mutation number from the batch iseq.  Use
	the same batch iseq.
	(mjit_store_failed_spec_insn): New.
	(print_statistics): Print insns resulted in the mutations.

2017-05-11  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl_exec.c (op_val_call_end, op_call_end, do_bcmp): Use ep and
	VM_ENV_DATA_INDEX_FLAGS to access the flags.
	(mjit_call_finish): Ditto.

2017-05-11  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.c (output_const_ci, output_const_cc): Remove.
	(translate_iseq_insn): Change cfunc call generation.  Move attr
	access generation up to avoid a standard call generation.  Use
	callee_iseq temp_vars_num for setting sp after the call.
	* rtl_exec.c (mjit_call_finish): New.
	(mjit_call_iseq_finish): Use it.
	(mjit_iseq_call): Rename temp_vars_num into caller_temp_vars_num.
	(mjit_call_finish): Rename to mjit_general_call_finish.  Use
	mjit_call_finish.
	(mjit_call_method, mjit_call_iseq_normal, mjit_call_block_end):
	Rename mjit_call_finish to mjit_general_call_finish.
	(mjit_call_cfunc): Change prototype and implementation.
	* vm_args.c (vm_caller_setup_arg_splat): Split into
	vm_caller_setup_arg_splat_0.
	(vm_caller_setup_arg_kw): Split into vm_caller_setup_arg_kw_0.
	(CALLER_SETUP_ARG_0): New.
	* vm_insnhelper.c (vm_call_cfunc_with_frame): Split into
	vm_call_cfunc_with_frame_0.
	(vm_call_cfunc_0): New.

2017-05-10  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (iseq_compile_each): Mark parent iseq for the break.
	* mjit.c (translate_iseq_insn): Add speculative code for calls
	using call_iseq_normal.  Generate char mjit_profile_p.
	* mjit.h (mjit_profile_p): New.
	(mjit_execute_iseq): Split into additional mjit_execute_iseq_0.
	Make fast path for function with a JIT code.  Check mjit_profile_p
	for increment of jit_calls.
	(mjit_aot_process): Add ISEQ_TYPE_TOP and ISEQ_TYPE_MAIN.
	* rtl_exec.c (mjit_vm_exec_0, set_default_sp_0): New.
	(set_default_sp): Use set_default_sp_0.
	(call_setup_0): New.
	(call_setup): Use it.  Remove arg cc.
	(call_common): Don't pass cc to call_setup.
	(mjit_call_iseq_finish, mjit_iseq_call): New.
	* vm.c (mjit_profile_p): Initialize for the interpreter.
	* vm_args.c (vm_caller_setup_arg_block_0): New.
	(vm_caller_setup_arg_block): Use it.
	* vm_insnhelper.c (vm_call_iseq_setup_normal_0): New.
	(vm_call_iseq_setup_normal): Use it.

2017-05-08  Vladimir Makarov  <vmakarov@redhat.com>

	* compile.c (compile_named_capture_assign, get_opt_id, gen_op2):
	Rename aref into ind.
	(make_imm_id): Ditto.  Rename arefi and aref_str into indi and
	inds.
	(finish_op1_assign): Rename aset into indset.
	(iseq_compile_each): Rename aref, aref_str, aset, aset_str into
	ind, inds, indset, indesets.
	* insns.def (aref, arefi, aref_str): Rename to ind, indi, inds.
	(uind, uindi, uinds, aind, hind, aindi, hindi, hinds): New insns.
	(aset, aset_str): Rename to indset, indsets.
	(indseti, uindset, uindseti, unindsets, aindset, hindset): New.
	(aindseti, hindseti, hindsets): New.
	* rtl_exec.c (common_ind): New.
	(aref_f, arefi_f, aref_str_f, aset_f, aset_str_f): Rename to
	ind_f, indi_f, inds_f, indset_f, indesets_f.  Use common_ind.
	(uind_f, uindi_f, uinds_f, aind_f, hind_f, aindi_f, hindi_f): New
	functions.
	(hinds_f): Ditto.
	(common_aset): Rename to common_indset.  Add new args fixnum_p,
	array_insn_id, hash_insn_id.  Add speculation by BOP.  Change
	insns if it is necessary.
	(aset_f, aset_str_f): Rename to indset_f, indsets_f.
	(indseti_f, uindset_f, uindseti_f, unindsets_f, aindset_f): New
	functions.
	(hindset_f, aindseti_f, hindseti_f, hindsets_f): Ditto.
	* mjit.c (get_insn_fun_features): Rename aref, arefi, aref_str,
	aset, aset_str into ind, indi, inds, indset, indesets.  Setup
	features for uind, uindi, uinds, aind, hind, aindi, hindi, hinds,
	indseti, aindset, hindset, aindseti, hindseti, hindsets.

2017-05-08  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_insnhelper.h (vm_exec_insn_address_table): New extern.
	(vm_change_insn): Use it.
	* vm_exec.c (vm_exec_insn_address_table, vm_create_address_table):
	New.
	(vm_finish_address_table): New.
	* vm.c (ruby_vm_destruct): Call vm_finish_address_table.
	(Init_BareVM): Call vm_create_address_table.

2017-05-06  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (vm_exec): Change prototype signature.
	(mjit_execute_iseq): Remove in_wrapper arg.
	* mjit.c (translate_iseq_insn): Use rb_threadptr_tag_jump for
	raise insn generation.
	(translate_batch_iseqs): Remove setting VM_FRAME_FLAG_FINISH.
	* rtl_exec.c (mjit_vm_exec): New.
	(call_method, op_call_end, define_class_f, mjit_call_finish): Use
	it.
	* vm.c (invoke_block, invoke_bmethod, rb_iseq_eval_main): Add arg
	for vm_exec calls.
	(vm_exec): Add new arg.  Use ep to set up VM_FRAME_FLAG_FINISH.
	* vm_eval.c (vm_call0_body, eval_string_with_cref):  Add arg
	for vm_exec calls.
	* vm_insnhelper.h (CALL_METHOD): Remove last arg in
	mjit_execute_iseq call.
	(vm_exec): Change prototype signature.

2017-05-05  Vladimir Makarov  <vmakarov@redhat.com>

	* MJIT_KEEP: Add vm_call_cfunc.
	* mjit.h (vm_call_cfunc): New extern.
	(mjit_execute_iseq): Move failed_jit_calls increment too ...
	(mjit_change_iseq): ... here.
	* mjit.c (get_op_str): Remove arugment iseq.
	(output_const_ci, output_const_cc): New.
	(translate_iseq_insn): Make and use local copies of cc and ic.
	Generate a special code for speculative cfunc call.  Add cancel
	label.  Use it for cancelling in mjit_call_method.  Add
	mjit_change_iseq output in spec_stop code section.  Remove such
	code for mjit_spec.
	* vm_args.c (vm_caller_setup_arg_splat): Make extern.  Add extern
	prototype.
	(vm_caller_setup_arg_kw): Ditto.
	* vm_insnhelper.c (vm_call_cfunc_with_frame): Declare inline.  Use
	mjit_trace_p guard for tracing code.
	(vm_call_cfunc): Make extern.
	* rtl_exec.c (call_setup): Extract from call_common.
	(call_common): Use it.
	(mjit_call_cfunc): New.

2017-05-03  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h (vm_call_ivar, vm_call_attrset): New externals.
	* vm_insnhelper.c (vm_call_ivar, vm_call_attrset): Make them
	external.
	* rtl_exec.c (mjit_check_cc_attr_p, mjit_call_ivar): New.
	(mjit_call_setivar): New.
	* mjit.c (translate_iseq_insn): Generate speculative code for
	accessing to ivars.

2017-05-02  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_core.h (struct rb_iseq_constant_body): Remove nonlocal_var_p.
	Add parent_iseq_p and break_next_redo_raise_p.
	(struct rb_control_frame_struct): Use restrict for pc.
	* vm_exec.h (vm_exec_core): Add an extern.
	* vm_exec.c (vm_exec_core): Make extern.
	* compile.c (rb_iseq_compile_node): Remove allocation of
	nonlocal_var_p.
	(iseq_compile_each): Set up break_next_redo_raise_p.  Remove
	setting nonlocal_var_p up.
	* iseq.c (rb_iseq_free): Remove deallocation of nonlocal_var_p.
	(set_relation): Set parent_iseq_p.
	* mjit.h (vm_call_iseq_setup_normal_p): New extern.
	* mjit.c (use_locals_p): Remove.
	(struct translation_control): New.
	(update_tc_from_insns, generate_result_on_stack): New.
	(get_op_str): Rewrite using translation_control.
	(generate_param_setup): Modify args_num for block arg.
	(translate_iseq_insn): Use translation_control.  Use goto instead
	of return for failed speculation.  Generate
	vm_call_iseq_setup_normal_p call.
	(translate_batch_iseqs): Set up tcp and use it.  Don't check
	body->nonlocal_var_p.  Generate labeled failed speculation
	section.
	(mjit_add_iseq_to_process, mjit_increase_iseq_priority): Export.
	(mjit_get_iseq_fun): Export.
	* rtl_exec.c (get_temp_addr_safe): New.
	(mjit_call_iseq_normal): New.
	* tool/mk_call_iseq_optimized.rb (vm_call_iseq_setup_normal_p):
	Add generation.
	* MJIT_KEEP: Add vm_call_iseq_setup_normal.

2017-04-27  Vladimir Makarov  <vmakarov@redhat.com>

	* ruby.c (usage): Add JIT debug flag.
	(setup_mjit_options): Process the flag.
	* mjit.h (struct mjit_options): Add debug field.
	* mjit.c (MJIT_DEBUG): Remove.
	(struct rb_mji_batch_list): New.
	(queue_head, queue_tail): Remove.
	(batch_queue): New.
	(done_batches): Make it the list.
	(get_from_queue, add_to_queue, remove_from_queue): Remove.
	(add_to_done_batches, remove_from_done_batches): Remove.
	(get_from_list, add_to_list, remove_from_list): New.
	(debug): Check debug and verbose options.
	(GCC_COMMON_ARGS_DEBUG, LLVM_COMMON_ARGS_DEBUG): Rename from debug
	variant of corresponding options.
	(translate_iseq_insn): Check debug option and null bi->iseq.
	(make_pch, start_batch): Use GCC_COMMON_ARGS_DEBUG and
	LLVM_COMMON_ARGS_DEBUG for debug mode.
	(worker): Use new functions for the batch lists.
	(init_workers): Initialize the batch lists.
	(create_batch_iseq): Initiate bi->label.  Check debug option.
	(finish_forming_curr_batch, mjit_increase_iseq_priority): Use new
	functions for the batch lists.
	(mjit_redo_iseq, mjit_cancel_all): Ditto.
	(mjit_free_iseq): Check debug option.
	* README.md: Describe additional JIT speculations.

2017-04-24  Vladimir Makarov  <vmakarov@redhat.com>

	* mjit.h: Indentation.
	* mjit.c (struct global_spec_state): New.
	(struct rb_mjit_batch): Remove trace_p and bop_redefined_p.  Add
	spec_state.
	(add_to_done_batches, remove_from_done_batches): New.
	(init_global_spec_state, setup_global_spec_state): New.
	(valid_global_spec_state_p): New.
	(get_bop_redefined_p): Remove.
	(translate_batch_iseqs): Use setup_global_spec_state.
	(worker): Use add_to_done_batches.  Check spec status.  Put batch
	back to queue if necessary.
	(create_batch): Use init_global_spec_state.
	(mjit_cancel_all): Put done batches back to queue if necessary.

2017-04-23  Vladimir Makarov  <vmakarov@redhat.com>

	* insns.def: Pass a new arg to set_default_sp.
	* rtl_exec.c (RTL_GET_BP): New.  Use it almost everywhere instead
	of cfp->bp.
	(var_assign): Check mjit_ep_neq_bp_p.
	(set_default_sp): Add a new arg.  Use it.
	(op_val_call_end, op_call_end): New.
	(ary_hash_op_f, not_f, do_arithm): Reorganize code.  Use
	op_vall_call_end.
	(succ_f, do_cmp): Use op_vall_call_end.
	(common_spec_fix_cmp, common_spec_flo_cmp): Use LIKELY and
	mjit_bop_redefined_p.
	(do_bcmp): Reorganize code.
	(bcmp_flo_call): Pass speculative insns.
	(do_arithm, do_ltlt, aref_f, arefi_f, aref_str, common_aset_f):
	Reorganize code.  Use op_vall_call_end.
	(regexp_match2_f): Ditto.
	(do_spec_fix_arithm, do_spec_flo_arithm): Use LIKELY and
	mjit_bop_redefined_p.
	(ret_trace, trace_f): Use mjit_trace_p.
	(mjit_op_end, mjit_bcmp_end): Remove.
	(mjit_call_finish): New.
	(mjit_call_method, mjit_call_block_end): Change return type.  Use
	mjit_call_finish.
	* vm_core.h (VM_FRAME_FLAG_CANCEL): Add.
	* vm.c (in_mjit_p, mjit_trace_p, mjit_bop_redefined_p): New
	definitions and declarations.
	(mjit_ep_neq_bp_p): Ditto.
	(rb_vm_check_redefinition_opt_method): Call mjit_cancel_all.
	* vm_trace.c: Include mjit.h.
	(recalc_add_ruby_vm_event_flags): Call mjit_cancel_all.
	(recalc_remove_ruby_vm_event_flags): Ditto.
	* mjit.h (mjit_cancel_all): New exteren definitions.
	* mjit.c (struct rb_mjit_batch): Add trace_p, bop_redefined_p,
	ep_neq_bp_p.
	(get_bop_redefined_p): New.
	(get_op_str): Don't use arrays for temps and vars.
	(generate_param_setup): Ditto.
	(generate_set_pc): New.
	(translate_iseq_insn): Use generate_set_pc.  Check
	mjit_call_block_end and mjit_call_method return value and return
	Qundef.  Reorganize code for speculative and bcmp.
	* vm_insnhelper.h (CALL_METHOD): Pass a new arg to set_default_sp.
	* common.mk (vm_trace.o): Add mjit.h dependence.

2017-04-13  Vladimir Makarov  <vmakarov@redhat.com>

	* tool/minimize_mjit_header.rb: Count kept function definitions
	and print them.
	(get_keep_hash): Rename to get_keep_info.  Process regexps and
	return them too.

2017-04-07  Vladimir Makarov  <vmakarov@redhat.com>

	* vm_insnhelper.c (vm_getinstancevariable_spec): New.
	(vm_setinstancevariable_spec): New.
	* vm_core.h (struct rb_iseq_constant_body): New member
	failed_jit_calls.
	(const_IC): New.
	* rtl_exec.c (mjit_spec_ivar2var_f, mjit_spec_val2ivar_f): New.
	(mjit_spec_var2ivar_f): New.
	* mjit.h (mjit_execute_iseq): Increment failed_jit_calls for iseq
	executions with a speculation failure.
	* mjit.c (struct rb_mjit_batch_iseq): New member failed_jit_calls.
	(struct insn_fun_features): New member mjit_spec_p.
	(get_insn_fun_features): Set up the new member.
	(translate_iseq_insn): Use it to generate speculative variants
	with constant IC.
	(create_batch_iseq): Initiate failed_jit_calls.
	(mjit_free_iseq): Save it.
	(print_statistics): Output statistics about the failed calls.
	* internal.h (rb_float_flonum_value, rb_float_new_inline):
	Refactor to have a path for optimizations in JIT C compiler.
	* common.mk (rb_mjit_header.h): Check the initial header with CC.

2017-04-05  Vladimir Makarov  <vmakarov@redhat.com>

	* common.mk (install-rb-mjit-header): Use $<.
	(realclean-local): Remove rb_mjit_import.h.
	(rb_mjit_header.h): Remove miniruby from dependencies.
	(rb_mjit_min_header-$(RUBY_PROGRAM_VERSION).h): Add mjit_header.rb
	and minimize_mjit_header.rb to dependencies.  Add -I and MJIT_KEEP
	to the command.  Use a temporary intermediate file.
	(rb_mjit_import.h): New.
	(vm.o): Add rb_mjit_import.h as a dependence.
	* internal.h (MJIT_KEEP): Remove.
	(rb_func_proc_new): Export.
	* mjit.c (get_op_str): Use get_loc_addr instead of get_local_addr.
	* tool/mjit_header.rb: New.
	* tool/extract_mjit_header_externs.rb: New.
	* MJIT_KEEP: New.
	* tool/minimize_mjit_header.rb: Read the keep file.  Check initial
	and final header correctness.  Transform external definitions to
	static.  Print the result decls number.
	(mjit_header): New require.
	(get_decl): Add a parameter.  Move to mjit_header.rb.
	(get_keep_hash, decl_names_in?): New methods.
	* vm.c: Remove '#ifndef MJIT_HEADER' before inclussion of
	rtl_exec.c.
	(ruby_vm_global_method_state, ruby_vm_global_constant_state):
	Remove export directives.
	(ruby_vm_const_missing_count, ruby_current_vm): Ditto.
	(ruby_vm_event_flags, rb_source_loc, vm_exec): Ditto.
	(rb_mjit_header.h): Include with the export.
	* vm_args.c: Remove '#ifndef MJIT_HEADER'.
	(vm_caller_setup_arg_block): Remove export directives.
	* vm_insnhelper.c:  Remove '#ifndef MJIT_HEADER'.
	(vm_stackoverflow, vm_env_write_slowpath, lep_svar_get): Remove
	export directives.
	(rb_vm_get_cref, vm_get_const_key_cref, vm_cref_push): Ditto.
	(vm_search_const_defined_class): Ditto.
	(vm_throw, check_match, vm_call_general, vm_search_super_method):
	Ditto.
	(vm_invoke_block, vm_once_exec, vm_once_clear, vm_defined): Ditto.
	* vm_exec.c (rb_vm_get_insns_address_table): Ditto.
	* vm_method.c (rb_callable_method_entry): Ditto.

2017-03-31  Vladimir Makarov  <vmakarov@redhat.com>

	* internal.h (MJIT_KEEP): New.
	* rtl_exec.c (call_dtrace_hook): Put do_inline before void.
	* tool/minimize_mjit_header.rb: Check '__attribute__ (())' to keep
	a decl.

2017-03-27  Vladimir Makarov  <vmakarov@redhat.com>

	* bignum.c (rb_int128t2big): Add visibility.
	* class.c (rb_class_inherited): Ditto.
	* common.mk: Update dependencies.
	(COMMONOBJS): Add mjit.o.
	(install-rb-mjit-header): New entry.  Add to install dependencies.
	(realclean-local): Remove rb_mjit_header.h and
	rb_mjit_min_header-XXX.h.
	(incs): Add rb_mjit_min_header-XXX.h.
	(rb_mjit_header.h, rb_mjit_min_header-XXX.h): New entry.
	* compile.c (USE_INSN_STACK_INCREASE):
	(mjit.h): Include.
	(struct iseq_link_element): Remove ISEQ_ELEMENT_ADJUST.
	(struct iseq_adjust_data): Remove.
	(USE_SELF_LD, INT2LINT, LINT2INT, FIXNUM2LINT): New.
	(INSERT_BEFORE_INSN, INSERT_BEFORE_INSN1, ADD_GETLOCAL): Remove.
	(ADD_SETLOCAL, ADD_ADJUST, ADD_ADJUST_RESTORE): Remove.
	(ADD_RTL_GOTO, ADD_RTL_INSNL, ADD_INSN4, ADD_INSN5, ADD_INSN6): New.
	(ADD_INSN7, ADD_RTL_CALL_RECEIVER, ADD_RTL_SEND_R): New.
	(ADD_RTL_SEND_RECV, ADD_RTL_VMCORE_SEND): New.
	(COMPILE, COMPILE_POPPED, COMPILE_, COMPILE_RECV): Add args res
	and curr_temp_vars.
	(IS_ADJUST): Remove.
	(iseq_compile_each, iseq_set_arguments): Add args result and
	curr_temp_vars.
	(INSERT_ELEM_AFTER, increment_temps_var, get_temp_stack_slot):
	New.
	(stack_result, anywhere_result, setup_result_var_number): New.
	(prev_used_label_p): New.
	(rb_iseq_compile_node, rb_iseq_translate_threaded_code): Rewrite
	for RTL.
	(rb_iseq_original_iseq): Ditto.
	(rb_vm_insn_addr2insn): Move to iseq.c.
	(compile_data_alloc_adjust, INSERT_ELEM_NEXT, INSERT_ELEM_PREV):
	Remove.
	(LAST_ELEMENT, LIST_SIZE_ZERO, INSERT_LIST, new_adjust_body):
	Remove.
	(new_insn_core): Initiate check.
	(new_local_move, new_calldata): New.
	(new_callinfo): Remove.
	(new_rtl_insn_send, new_rtl_insn_send_recv, new_rtl_vmcore_send):
	New.
	(new_insn_send): Remove.
	(new_child_iseq): Remove const for arg parent.
	(iseq_setup): Call mjit_aot_process.
	(get_local_var_idx): Return decrease idx.
	(get_dyna_var_idx): Ditto.  Remove cosnt for arg iseq.  Add arg
	id_iseq.
	(iseq_set_arguments_keywords, iseq_set_arguments): Add new args
	result and curr_temp_vars_num.  Rewrite for RTL.
	(iseq_set_sequence): Rewrite for RTL.
	(iseq_set_exception_table): Ditto.
	(destination_offset): New.
	(get_destination_insn, replace_destination): Rewrite.
	(remove_unreachable_chunk): Rewrite.
	(get_branch_reverse_id, branch_insn_p, combined_branch_p): New.
	(get_combined_branch_id, peephole_pass): New.
	(iseq_peephole_optimize): Rewrite for RTL.
	(insn_set_specialized_instruction): Remove.
	(iseq_specialized_instruction, insn_set_sc_state): Rewrite for RTL
	insns.
	(new_value_load, add_value_load, add_local_move): New.
	(compile_dstr_fragments, compile_dstr, compile_dregx): Add new
	args result and curr_temp_vars_num.  Rewrite for RTL.
	(compile_flip_flop, compile_branch_condition): Ditto.
	(compile_array_keyword_arg): Ditto.
	(new_ret_to, add_ret_to): New.
	(compile_array_, compile_array, when_vals, compile_massign_lhs):
	Add new args result and curr_temp_vars_num.  Rewrite for RTL
	insns.
	(compile_massign_opt_lhs, compile_massign_opt): Ditto.
	(adjust_stack): Remove.
	(compile_massign, compile_colon2, compile_cpath, defined_expr0):
	Add new args result and curr_temp_vars_num.  Rewrite for RTL
	insns.
	(defined_expr, add_ensure_iseq, setup_args): Ditto.
	(has_keyword_args_p): New.
	(build_postexe_iseq): Rewrite for RTL.
	(compile_named_capture_assign): Ditto.  Add arg
	curr_temp_vars_num.
	(get_opt_id, make_imm_id, gen_op2, finish_op1_assign): New.
	(joint_result, update_result, cdhash_increase_label_refcnt): New.
	(iseq_compile_each): Add new args result and curr_temp_vars_num.
	Rewrite for RTL.
	(calc_sp_depth): Remove.
	(opobj_inspect): Rewrite for RTL insn.
	(iseq_build_callinfo_from_hash): Rename to
	iseq_build_calldata_from_hash.  Rewrite.
	(rb_iseq_build_from_ary, rb_iseq_build_from_ary_body): Rewrite for
	RTL.
	(for_self_aref, for_self_arset): Rewrite for RTL.
	(ibf_dump_callinfo): Ditto.  Rename to ibf_dump_calldata.
	(ibf_dump_code, ibf_load_code): Modify.
	(ibf_dump_local_table): Decrease size.
	(ibf_dump_ci_entries): Rename to ibf_dump_cd_entries.  Rewrite.
	(ibf_load_ci_entries): Rename to ibf_load_cd_entries.  Rewrite.
	(ibf_dump_iseq_each): Modify.
	(ibf_load_iseq_each): Ditto.
	* cont.c (cont_capture): Modify vm_stack_slen calculation.
	* opt_operand.def: Make it empty.
	* eval.c (mjit.h): Include.
	(ruby_cleanup): Call mjit_finish.
	* ext/rubyvm/lib/forwardable/impl.rb: Modify for RTL.
	* hash.c (rb_hash_compare_by_id_p): Add visibility.
	* insns.def: Rewrite.
	* internal.h (do_inline): New.
	(rb_float_flonum_value, rb_float_noflonum_value): Use it instead
	of inline.
	(rb_float_value_inline, rb_float_new_inline, rb_obj_builtin_type):
	Ditto.
	* iseq.c (mjit.h): Include.
	(rb_iseq_free): Remove const from arg iseq.  Call mjit_free_iseq.
	Modify for calldata use.
	(iseq_memsize): Modify for calldata use.
	(set_relation): Remove const from arg piseq.
	(prepare_iseq_build): Remove const from arg parent.
	(rb_iseq_new, rb_iseq_new_top, rb_iseq_new_main): Ditto.
	(iseq_load): Ditto.
	(rb_iseq_new_with_opt): Ditto.
	(rb_insn_operand_intern): Rewrite for RTL and call data.
	(rb_vm_insn_addr2insn): Move from compile.c.
	(iseq_data_to_ary): Rewrite for RTL.
	* iseq.h (struct iseq_compile_data): Add fields cd_index,
	cd_kw_index, result.  Remove ci_index and ci_kw_index.
	* Makefile.in (install-cross, distclean-local): Process
	rb_mjit_min_header-XXX.h.
	($(INSNS)): Add rtl_exec.c as a dependence.
	* mjit.h: New.
	* mjit.c: New.
	* numeric.c (ruby_float_mod): Add visibility.
	* object.c (rb_obj_equal, rb_obj_not): Ditto.
	* README.md: Rewrite.
	* re.c (rb_reg_new_ary): Add visibility.
	* rtl_exec.c: New.
	* ruby.c (mjit.h): Include.
	(struct ruby_cmdline_options): Change type for field mjit.
	(usage): Print JIT options.
	(setup_mjit_options): New.
	(proc_options): Use it to process jit options.  Call mjit_init.
	* string.c (rb_str_concat_literals, rb_id_quote_unprintable): Add
	visibility.
	* test/ruby/test_iseq.rb (test_safe_call_chain): Modify for RTL.
	* test/ruby/test_optimization.rb: Ditto.
	* test/ruby/test_rubyoptions.rb (test_usage): Ditto.
	* test/ruby/test_settracefunc.rb (TestSetTraceFunc): Ditto.
	* thread.c (hreadptr_get_interrupts): Add visibility.
	* tool/instruction.rb (RubyVM::initialize): Add arg alt_names.
	(RubyVM): Add reader for alt_names.
	(sp_increase_c_expr): Add CALL_DATA processing.
	(make_insn): Add arg alt_names.
	(): Process "_" and "<type> _".
	(add_insn, make_insn_operand_optimized): Pass alt_names.
	(make_unified): Modify for new insn format.
	(make_unified_insn_each, make_insn_sc): Pass alt_names to a new
	instruction.
	(make_header_operands): Process "_" type.
	(make_header_analysis): Ignore "_" for COLLECT_USAGE_OPERAND
	generation.
	(make_header_defines): Generate CURRENT_INSN_NAME and
	CURRENT_INSN_XXX.
	(make_footer_undefs): Undefine them.
	(op2typesig): Process insn_t, sindex_t, rindex_t, CALL_DATA, and
	"_".
	(TYPE_CHARS): Add TS_INSN, TS_SIDNEX, TS_RINDEX.
	(val_as_type): Process sindex_t and rindex_t.
	* tool//minimize_mjit_header.rb: New.
	* variable.c (rb_gvar_get, rb_gvar_set, rb_autoloading_value)
	(rb_const_warn_if_deprecated, rb_public_const_get_from)
	(rb_public_const_get_at, rb_public_const_defined_from)
	(rb_const_lookup): Add visibility.
	* vm_args.c: Use MJIT_HEADER to exclude declarations for MJIT.
	(argument_arity_error): Make external.
	(setup_parameters_complex): Use rb_call_data_with_kwarg.
	(vm_caller_setup_arg_kw): Use new call info format.
	(vm_caller_setup_arg_block): Make extern and add visibility.
	* vm.c: Use MJIT_HEADER to exclude declarations for
	MJIT.
	(VM_EP_LEP, rb_vm_search_cf_from_ep): Use do_inline.
	(USE_INSN_STACK_INCREASE): New.
	(VM_CFP_IN_HEAP_P, VM_EP_IN_HEAP_P): Use inline.
	(vm_ep_in_heap_p_, rb_vm_ep_in_heap_p): Use static inline.
	(VM_CAPTURED_BLOCK_TO_CFP): Use inline.
	(VM_BH_FROM_CFP_P,vm_passed_block_handler): Use inline.
	(vm_cref_new0, vm_cref_new, vm_cref_new_use_prev, vm_cref_dup):
	Ditto.
	(vm_cref_new_toplevel, vm_cref_dump): Make external.
	(vm_bind_update_env): Use inline.
	(VM_INSN_STAT): New.
	(constant.h, mjit.h, insn_inc, rtl_exec.c): Include.
	(ruby_vm_global_method_state, ruby_vm_global_constant_state): Make
	external.  Add visibility.
	(ruby_vm_class_serial): Make external.
	(ruby_vm_const_missing_count, ruby_current_vm): Add visibility.
	(ruby_vm_event_flags): Ditto.
	(vm_make_env_object, vm_invoke_proc, vm_invoke_bmethod): Make
	external.
	(rb_binding_add_dynavars): Remove const for base_iseq.
	(rb_source_loc): Add visibility.
	(vm_exec): Ditto.  Add visibility.  Modify to use JIT.
	(all_executed_insns_num, all_executed_insns_len): New.
	(rb_iseq_eval_main): Print their value.
	(rb_thread_mark): Modify for RTL.
	(Init_VM): Remove const for iseq.
	* vm_core.h (lindex_t): Move from vm_exec.h.
	(struct call_data): New.
	(struct rb_call_data_with_kwarg): New.
	(struct rb_iseq_constant_body): Add fields temp_vars_num,
	cd_entries, cd_size, cd_kw_size, nonlocal_var_p, jit_code,
	batch_iseq, jit_mutations_num.  Remove fields ci_entries,
	cc_entries, ci_size, ci_kw_size.  Remove const from parent_iseq.
	(struct rb_captured_block): Add field bp.  Remove const for iseq.
	(struct rb_control_frame_struct): Remove const from pc and
	iseq.  Add bp.
	(rb_iseq_new, rb_iseq_new_top, rb_iseq_new_main): Remove const
	from parent.
	(rb_iseq_new_with_opt): Ditto.
	(rb_env_t): Remove const form iseq.
	(CALL_DATA): New.
	(vm_env_write_slowpath): Add extern.
	(vm_block_iseq, vm_proc_iseq): Remove const from return type.
	* vm_dump.c (vm_stack_dump_each): Use local_size instead of
	local_table_size.
	(rb_vmdebug_debug_print_pre): Use stderr.
	* vm_eval.c (vm_exec): Remove forward decl.
	(make_no_method_exception): Make external.
	* vm_exec.c (vm_exec_core): Switch off DECL_SG_REG for x86_64.
	Remove register from the reg_cfp declaration.
	(rb_vm_get_insns_address_table): Add visibility.
	* vm_exec.h (lindex_t): Move to vm_core.h.
	(insn_t, sindex_t, rindex_t): New.
	(DEBUG_ENTER_INSN): Use getenv and increase SP temporarily.
	(END_INSN): Update all_executed_insns_num and
	all_executed_insns_len.
	* vm_insnhelper.c: Remove insns.inc and constant.h inclusion.  Use
	MJIT_HEADER to exclude declarations for MJIT.
	(vm_stackoverflow): Make external.  Add visibility.
	(vm_check_frame): Make external.
	(vm_push_frame): Use do_inline.  Set up bp.
	(vm_pop_frame): Use do_inline.
	(vm_env_write_slowpath): Make external.  Add visibility.
	(vm_env_write): Use do_inline.
	(lep_svar_get): Make external.  Add visibility.
	(lep_svar_set): Make external.
	(rb_vm_get_cref, vm_get_const_key_cref, vm_cref_push): Make
	external.  Add visibility.
	(vm_get_cbase, vm_get_const_base, vm_check_if_namespace): Use
	do_inline.
	(vm_ensure_not_refinement_module, vm_get_iclass): Ditto.
	(vm_search_const_defined_class): Make external.  Add visibility.
	(vm_getivar, vm_setivar, vm_getinstancevariable): Use do_inline.
	(vm_setinstancevariable): Ditto.
	(vm_throw): Make external.  Add visibility.
	(vm_expandarray, vm_search_method, check_cfunc): Use do_inline.
	(check_match): Make external.  Add visibility.
	(double_cmp_lt, double_cmp_le, double_cmp_gt, double_cmp_ge): Use
	do_inline.
	(vm_call_opt_send): Modify to use call data.
	(vm_call_general, vm_search_super_method, vm_invoke_block): Make
	external.  Add visibility.
	(vm_make_proc_with_iseq): Remove const from block_iseq.
	(vm_once_exec, vm_once_clear, vm_defined): Make external.  Add
	visibility.
	* vm_insnhelper.h (COLLECT_USAGE_INSN): Make variant for
	MJIT_INSN_STATISTICS.
	(VM_REG_BP, GET_BP): New.
	(CALL_METHOD): Modify to use call data.  Call set_default_sp.  Put
	result at call_start.
	(CALL_SIMPLE_METHOD): Remove.
	(THROW_DATA_NEW, THROW_DATA_CATCH_FRAME_SET): Use do_inline.
	(THROW_DATA_STATE_SET): Ditto.
	(THROW_DATA_VAL, THROW_DATA_CATCH_FRAME): Ditto.
	(rb_vm_get_cref, lep_svar_get, lep_svar_set, vm_defined): New externs.
	(vm_invoke_block, vm_search_super_method, check_match, vm_throw):
	Ditto.
	(vm_search_const_defined_class, vm_check_frame, vm_stackoverflow):
	Ditto.
	(vm_cref_push, vm_once_exec, vm_once_clear, vm_exec): Ditto.
	(vm_change_insn): New.
	* vm_method.c (rb_callable_method_entry): Add visibility.
	* vm_trace.c (rb_threadptr_exec_event_hooks_and_pop_frame): Ditto.
	(rb_threadptr_exec_event_hooks): Ditto.
